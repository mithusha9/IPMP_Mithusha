// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution
{
public:
    vector<int> singleNumber(vector<int> nums) 
    {
        int n=nums.size();
        int Xor=nums[0];
        vector <int> ans(2, 0);
        int set_bit_no, x=0, y=0;
        for(int i=1; i<n; i++){
            Xor^=nums[i];
        }
        set_bit_no=Xor&~(Xor-1);
        for(int i=0; i<n; i++){
            if(nums[i]&set_bit_no){
                x=x^nums[i];
            }
            else
                y=y^nums[i];
        }
        if (y>x){
            ans[0]=x;
            ans[1]=y;
        }
        else{
            ans[0]=y;
            ans[1]=x;
        }
        return ans;
    }
};

// { Driver Code Starts.
int main(){
    int T;
    cin >> T;
    while(T--)
    {
    	int n; 
    	cin >> n;
    	vector<int> v(2 * n + 2);
    	for(int i = 0; i < 2 * n + 2; i++)
    		cin >> v[i];
    	Solution ob;
    	vector<int > ans = ob.singleNumber(v);
    	for(auto i: ans)
    		cout << i << " ";
    	cout << "\n";
    }
	return 0;
}  // } Driver Code Ends
